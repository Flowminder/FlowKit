# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from flowmachine.features import CircleGeometries, Circle

lons = [85.3240, 83.9956]
lats = [27.7172, 28.2380]
names = ["Kathmandu", "Pokhara"]
radii = [4000, 11000]
geojson = {
    "features": [
        {
            "geometry": {
                "coordinates": [
                    [
                        [85.364_560_076_579, 27.717_685_285_439_5],
                        [85.363_885_830_419_7, 27.710_634_111_274_7],
                        [85.361_679_031_888_9, 27.703_835_467_448_4],
                        [85.358_024_745_466_5, 27.697_550_563_553_6],
                        [85.353_063_586_143_3, 27.692_020_826_298_4],
                        [85.346_986_287_965_2, 27.687_458_636_638_3],
                        [85.340_026_362_250_8, 27.684_039_186_903_6],
                        [85.332_451_129_408_8, 27.681_893_767_994_3],
                        [85.324_551_468_129_9, 27.681_104_741_629_4],
                        [85.316_630_672_515_6, 27.681_702_388_195],
                        [85.308_992_839_989_8, 27.683_663_749_372_8],
                        [85.301_931_229_681_9, 27.686_913_509_077_4],
                        [85.295_717_031_906_6, 27.691_326_879_046_8],
                        [85.290_588_974_374, 27.696_734_379_508_9],
                        [85.286_744_160_316_4, 27.702_928_333_448_6],
                        [85.284_330_488_728_2, 27.709_670_827_735_2],
                        [85.283_440_948_756, 27.716_702_838_167_7],
                        [85.284_110_010_797, 27.723_754_170_482_6],
                        [85.286_312_258_345_8, 27.730_553_837_313],
                        [85.289_963_319_767_8, 27.736_840_473_323_4],
                        [85.294_923_071_049_4, 27.742_372_388_106_9],
                        [85.301_000_992_507_4, 27.746_936_869_199_3],
                        [85.307_963_477_935, 27.750_358_375_420_4],
                        [85.315_542_817_231_2, 27.752_505_302_788_5],
                        [85.323_447_506_534_5, 27.753_295_059_935_1],
                        [85.331_373_486_271_3, 27.752_697_255_219_1],
                        [85.339_015_869_781_3, 27.750_734_871_035_8],
                        [85.346_080_705_088_4, 27.747_483_379_214_1],
                        [85.352_296_310_901_3, 27.743_067_831_715_6],
                        [85.357_423_745_149_8, 27.737_658_039_821_6],
                        [85.361_265_999_492, 27.731_462_029_396_8],
                        [85.363_675_564_627_2, 27.724_718_026_652_9],
                        [85.364_560_076_579, 27.717_685_285_439_5],
                    ]
                ],
                "type": "Polygon",
            },
            "id": 1,
            "properties": {
                "name": "Kathmandu",
                "centroid": {
                    "coordinates": [85.324_000_326_688_2, 27.717_201_362_386_2],
                    "type": "Point",
                },
            },
            "type": "Feature",
        },
        {
            "geometry": {
                "coordinates": [
                    [
                        [84.107_563_069_659_4, 28.235_499_063_618_2],
                        [84.104_851_532_676_4, 28.216_204_653_223_1],
                        [84.097_944_528_276_9, 28.197_749_061_459_9],
                        [84.087_109_208_739, 28.180_840_780_539_7],
                        [84.072_762_968_191_7, 28.166_128_632_000_7],
                        [84.055_457_253_120_4, 28.154_176_978_144_6],
                        [84.035_856_353_330_4, 28.145_444_187_961_4],
                        [84.014_711_990_273_7, 28.140_265_161_910_4],
                        [83.992_834_661_193_5, 28.138_838_566_327],
                        [83.971_062_805_131, 28.141_219_252_627_4],
                        [83.950_230_928_750_7, 28.147_316_144_802_5],
                        [83.931_137_865_049_5, 28.156_895_677_187_6],
                        [83.914_516_335_626_5, 28.169_590_659_682_6],
                        [83.901_004_947_007_6, 28.184_914_246_156_6],
                        [83.891_123_673_679_7, 28.202_278_490_423_4],
                        [83.885_253_765_783_5, 28.221_016_799_600_3],
                        [83.883_622_869_475, 28.240_409_443_253_3],
                        [83.886_295_965_621, 28.259_711_154_506],
                        [83.893_172_522_029_5, 28.278_179_771_559_5],
                        [83.903_990_021_841_4, 28.295_104_819_24],
                        [83.918_333_783_851_3, 28.309_834_923_438_3],
                        [83.935_652_738_965_2, 28.321_802_988_269_5],
                        [83.955_280_581_749_1, 28.330_548_146_309_5],
                        [83.976_461_488_936, 28.335_733_614_185_4],
                        [83.998_379_399_738_4, 28.337_159_744_836],
                        [84.020_189_696_859_3, 28.334_771_757_623_7],
                        [84.041_052_021_283_5, 28.328_661_840_067_1],
                        [84.060_162_904_564_1, 28.319_065_540_847],
                        [84.076_786_912_264_2, 28.306_352_602_678_2],
                        [84.090_285_060_619_1, 28.291_012_605_283_5],
                        [84.100_139_390_900_3, 28.273_635_993_251],
                        [84.105_972_754_812_9, 28.254_891_242_323_9],
                        [84.107_563_069_659_4, 28.235_499_063_618_2],
                    ]
                ],
                "type": "Polygon",
            },
            "id": 2,
            "properties": {
                "name": "Pokhara",
                "centroid": {
                    "coordinates": [83.995_595_590_226_7, 28.238_010_587_263],
                    "type": "Point",
                },
            },
            "type": "Feature",
        },
    ],
    "properties": {"crs": "+proj=longlat +datum=WGS84 +no_defs"},
    "type": "FeatureCollection",
}


def test_circle_column_names():
    """Test that CircleGeometries has correct column_names property"""
    cl = Circle(2, 3, 4, "bob")
    c = CircleGeometries([cl])
    assert c.head(0).columns.tolist() == c.column_names


def test_circle_string_rep():
    """Test that Circle objects have correct string representation."""
    lat, lon, radius, name = 2, 3, 4, "bob"
    cl = Circle(lon, lat, radius, name)
    assert f"Circle(lat={lat},long={lon},radius={radius},name={name})" == str(cl)


def test_circle_loc_creation():
    """
    Test that point attribute gets made correctly. Not sure whether I need to test this 
    class since it basicly just wraps up saome data...?
    """
    cl = Circle(lon=lons[0], lat=lats[0], radius=radii[0], name=names[0])
    assert cl.point_sql == "ST_GeomFromText('POINT (85.324 27.7172)',4326)::geography"


def test_circle_geometries():
    """
    Test that correct geometry objects are returned and GeoDataMixin is working correctly
    """
    c_locs = [Circle(*vals) for vals in zip(lons, lats, radii, names)]
    geoms = CircleGeometries(c_locs)
    assert geoms.to_geojson() == geojson


def test_rastersum(get_dataframe):
    """
    Test that CircleRasterSum returns correct data 
    """
    c_locs = [Circle(*vals) for vals in zip(lons, lats, radii, names)]
    geoms = CircleGeometries(c_locs)
    crs = geoms.raster_sum("population.worldpop_2015_un")
    crs = get_dataframe(crs).set_index("name")

    assert crs.loc["Kathmandu"]["statistic"] == 1_135_396.204_037_67
    assert crs.loc["Pokhara"]["statistic"] == 405_240.399_796_441_02
