#  POSTGRESQL CONFIGURATION
#
#  ------------------------
#
#  This file has been automatically generated on:
#
#    * {gendate}
#
#  PostgreSQL should be configured differently
#  depending mainly on the machine where it is
#  deployed. This configuration is based on
#  experience and on recommendations by PgTune.
#  Other configurations may be necessary.
#
#  Check the `flowdb` wiki for more information:
#
#  *  https://github.com/Flowminder/flowdb/wiki
#

#
# Logging options
#
log_destination = 'csvlog'
log_directory = 'pg_log'
logging_collector = 'on'
log_filename = 'postgres-%Y-%m-%d_%H%M%S'
log_rotation_age = 1d
log_rotation_size = 1GB
log_min_duration_statement = 250ms
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0

#
# Memory configuration
#
shared_buffers = {shared_buffers}
work_mem = 64MB
maintenance_work_mem = 2GB
effective_cache_size = {effective_cache_size}
max_connections = 200

#
# Checkpoint settings
#
wal_buffers = 16MB
checkpoint_completion_target = 0.9
checkpoint_timeout = 30min
min_wal_size = 4GB
max_wal_size = 12GB
default_statistics_target = 500

# wal_level should be increased _if_ there is more than one postgres server
wal_level='minimal'
max_wal_senders = 0

# High planning effort because our complex queries have runtimes dwarfing planning time
geqo_effort = 10

#
# Planner settings
#
# The value for random_page_cost is ca. 3.0 for a typical
# RAID10 array according to Christophe Pettus. [1]
# [1] http://thebuild.com/presentations/pycon-2016-pppp.pdf
#
effective_io_concurrency = 10
random_page_cost = 3.0

#
# Locking options
#
deadlock_timeout = 300000

# Shared libraries
shared_preload_libraries = '{preloads}'
cron.database_name = 'flowdb'
pg_stat_statements.track = all

#
#  Changes the acceptance of connections
#  to all [see https://hub.docker.com/_/postgres/]
#
listen_addresses = '*'

#
# Parallel configuration. Input the total
# number of cores you would like to use when
# running parallel queries.
#
max_worker_processes = {cores}
max_parallel_workers = {workers}
max_parallel_workers_per_gather = {workers_per_gather}