#
# DOCKER COMPOSE FOR FLOWKIT
#

version: '3.7'

networks:
  db:
  redis:
  zero:


services:

  flowdb:
    container_name: flowdb
    image: flowminder/flowdb:latest
    build:
      context: ./flowdb/
      dockerfile: Dockerfile
    ports:
      - ${FLOWDB_PORT:-9000}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-flowdb}
      - POSTGRES_USER=${POSTGRES_USER:-flowdb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-flowflow}
      - FM_PASSWORD=${FM_PASSWORD:-foo}
      - API_PASSWORD=${API_PASSWORD:-foo}
      - CACHE_SIZE=${CACHE_SIZE:-""}  # if empty, defaults to using 10% of the available disk space
      - CACHE_HALF_LIFE=${CACHE_HALF_LIFE:-1000}
    shm_size: 1G
    tty: true
    stdin_open: true
    restart: always
    networks:
      db:
        aliases:
          - flowdb

  flowdb_testdata:
    container_name: flowdb_testdata
    image: flowminder/flowdb-testdata:latest
    build:
      context: ./flowdb/testdata/
      dockerfile: Dockerfile
    ports:
      - ${FLOWDB_PORT:-9000}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-flowdb}
      - POSTGRES_USER=${POSTGRES_USER:-flowdb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-flowflow}
      - FM_PASSWORD=${FM_PASSWORD:-foo}
      - API_PASSWORD=${API_PASSWORD:-foo}
      - CACHE_SIZE=${CACHE_SIZE:-""}  # if empty, defaults to using 10% of the available disk space
      - CACHE_HALF_LIFE=${CACHE_HALF_LIFE:-1000}
    shm_size: 1G
    tty: true
    stdin_open: true
    restart: always
    networks:
      db:
        aliases:
          - flowdb

  flowdb_synthetic_data:
    container_name: flowdb_synthetic_data
    image: flowminder/flowdb-synthetic-data:latest
    build:
      context: ./flowdb/testdata/
      dockerfile: Dockerfile.synthetic_data
    ports:
      - ${FLOWDB_PORT:-9002}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-flowdb}
      - POSTGRES_USER=${POSTGRES_USER:-flowdb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-flowflow}
      - FM_PASSWORD=${FM_PASSWORD:-foo}
      - API_PASSWORD=${API_PASSWORD:-foo}
      - CACHE_SIZE=${CACHE_SIZE:-""}  # if empty, defaults to using 10% of the available disk space
      - CACHE_HALF_LIFE=${CACHE_HALF_LIFE:-1000}
      - N_DAYS=${N_DAYS:-7}
      - N_CELLS=${N_CELLS:-500}
      - N_CALLS=${N_CALLS:-2000}
    shm_size: 1G
    tty: true
    stdin_open: true
    restart: always
    networks:
      db:
        aliases:
          - flowdb

  flowmachine:
    container_name: flowmachine
    image: flowminder/flowmachine:latest
    build:
      context: ./flowmachine
      dockerfile: Dockerfile-dev
    ports:
      - ${FLOWMACHINE_PORT:-5555}:5555
    volumes:
      - ./flowmachine/:/flowapi
    depends_on:
      - redis
    tty: true
    stdin_open: true
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - DEBUG=${FM_DEBUG:-True}
      - FLOWDB_PORT=${FLOWDB_PORT:-5432}
      - DB_HOST=${DB_HOST:-flowdb}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-fm_redis}
    restart: always
    networks:
      - zero
      - db
      - redis

  flowapi:
    container_name: flowapi
    image: flowminder/flowapi:latest
    build:
      context: ./flowapi
      dockerfile: Dockerfile-dev
    ports:
      - ${FLOWAPI_PORT:-9090}:9090
    environment:
      - SERVER=flowmachine
      - FLOWDB_USER=reporter
      - DB_PASS=${REPORTER_PASSWORD:-foo}
      - DB_HOST=${DB_HOST:-flowdb}
      - FLOWDB_PORT=${FLOWDB_PORT:-5432}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-secret}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    volumes:
      - ./flowapi/flowapi:/flowapi/flowapi
    tty: true
    stdin_open: true
    restart: always
    networks:
      - db
      - zero

  flowauth:
    container_name: flowauth
    image: flowminder/flowauth:latest
    build:
      context: ./flowauth
      dockerfile: Dockerfile
    ports:
      - ${FLOWAUTH_PORT:-8080}:80
    environment:
      DEMO_MODE: ${DEMO_MODE:-1}

  redis:
    container_name: redis_flowkit
    image: bitnami/redis
    ports:
      - ${REDIS_PORT:-6379}:6379
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-fm_redis}
    restart: always
    networks:
      redis:
        aliases:
          - redis
