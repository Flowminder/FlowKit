#
# FlowETL stackfile, for use with flowdb stackfile
#

version: '3.7'

secrets:
  FLOWETL_AIRFLOW_ADMIN_USERNAME:
    external: true
  FLOWETL_AIRFLOW_ADMIN_PASSWORD:
    external: true
  AIRFLOW__CORE__SQL_ALCHEMY_CONN:
    external: true
  AIRFLOW__CORE__FERNET_KEY:
    external: true
  AIRFLOW__WEBSERVER__SECRET_KEY:
    external: true
  AIRFLOW_CONN_FLOWDB:
    external: true
  FLOWETL_POSTGRES_USER:
    external: true
  FLOWETL_POSTGRES_PASSWORD:
    external: true
  FLOWETL_REDIS_PASSWORD:
    external: true
  AIRFLOW__CELERY__RESULT_BACKEND:
    external: true
  FLOWETL_CELERY_USER:
    external: true
  FLOWETL_CELERY_PASSWORD:
    external: true
  FLOWETL_FERNET_KEY:
    external: true
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  FLOWETL_WEBSERVER_PASSWORD:
    external: true

x-flowetl-common:
  &flowetl-common
  image: flowminder/flowetl:${CONTAINER_TAG:-latest}
  restart: always
  tty: true
  stdin_open: true

  volumes:
    - ${FLOWETL_HOST_DAG_DIR:?Must set FLOWETL_HOST_DAG_DIR env var}:/opt/airflow/dags:ro

  environment:
    &flowetl-envs
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    POSTGRES_HOST: flowetl_db
    FLOWETL_AIRFLOW_PG_POOL_SLOT_COUNT: 4


networks:
  flowdb:
  flowetl:
volumes:
  data_volume_flowetl_airflow_db:


services:
  flowdb:
    networks:
      - flowdb

  flowetl_scheduler:
    << : *flowetl-common
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    command: scheduler
    networks:
      - flowetl

  flowetl_db:
    image: postgres:11.0
    tty: true
    stdin_open: true
    ports:
      - ${FLOWETL_POSTGRES_PORT:?Must set FLOWETL_POSTGRES_PORT env var}:5432
    secrets:
      - FLOWETL_POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    environment:
      POSTGRES_DB: flowetl_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 30s
      retries: 10
    networks:
      flowetl:
        aliases:
          - flowetl_db

  flowetl_redis:
    image: bitnami/redis:latest
    secrets:
      - FLOWETL_REDIS_PASSWORD
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/FLOWETL_REDIS_PASSWORD
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    networks:
      flowetl:
        aliases:
          - flowetl_redis

  flowetl_worker:
    <<: *flowetl-common
    command: celery worker
    deploy:
      replicas: ${FLOWETL_WORKER_COUNT:-1}
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - AIRFLOW_CONN_FLOWDB
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    networks:
      - flowetl
      - flowdb

  flowetl_webserver:
    <<: *flowetl-common
    ports:
      - ${FLOWETL_PORT:?Must set FLOWETL_PORT env var}:8080
    command: webserver
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    networks:
      - flowetl
    environment:
      <<: *flowetl-envs

  flowetl_flower:
    <<: *flowetl-common
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - FLOWETL_CELERY_USER
      - FLOWETL_CELERY_PASSWORD
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    environment:
      AIRFLOW__CELERY__FLOWER_BASIC_AUTH_CMD: "echo $$(cat /run/secrets/FLOWETL_CELERY_USER),$$(cat /run/secrets/FLOWETL_CELERY_PASSWORD)"
    command: celery flower
    ports:
      - ${FLOWETL_CELERY_PORT:?Must set FLOWETL_CELERY_PORT env var}:5555
    networks:
      - flowetl

  flowetl_triggerer:
    <<: *flowetl-common
    command: triggerer
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    networks:
      - flowetl

  flowetl_init:
    <<: *flowetl-common
    secrets:
      - FLOWETL_REDIS_PASSWORD
      - AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CELERY__RESULT_BACKEND
      - FLOWETL_POSTGRES_USER
      - FLOWETL_POSTGRES_PASSWORD
      - FLOWETL_WEBSERVER_PASSWORD
      - AIRFLOW__WEBSERVER__SECRET_KEY
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN
    command: bash -c "airflow db init && airflow users create --role Admin --username admin --email admin --firstname admin --lastname admin --password $$(cat /run/secrets/FLOWETL_WEBSERVER_PASSWORD)"
    networks:
      - flowetl
    depends_on:
      - flowetl_db
      - flowetl_redis
    deploy:
      restart_policy:
        condition: "none"


