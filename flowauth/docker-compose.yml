version: '3.7'
secrets:
  PRIVATE_JWT_SIGNING_KEY: # Secret used to sign api tokens
    external: true
  FLOWAUTH_FERNET_KEY: # Used for encrypted-at-rest storage of tokens in flowauth
    external: true
  FLOWAUTH_ADMIN_USERNAME: # Default flowauth administrator username
    external: true
  FLOWAUTH_ADMIN_PASSWORD: # Default flowauth administrator password
    external: true
  FLOWAUTH_DB_PASSWORD: # Password for flowauth's database
    external: true
  SECRET_KEY:
    external: true # Flask secret key
networks:
  web:
  flowauth_database:
volumes:
    vhost:
    nginx_home:
    certs:
services:
  flowauth:
    image: flowminder/flowauth:${CONTAINER_TAG:-latest}
    ports:
      - "9091:80"
    environment:
      DB_URI: "postgres://flowauth:{}@flowauth_postgres:5432/flowauth"
    secrets:
      - PRIVATE_JWT_SIGNING_KEY
      - FLOWAUTH_FERNET_KEY
      - FLOWAUTH_ADMIN_USERNAME
      - FLOWAUTH_ADMIN_PASSWORD
      - FLOWAUTH_DB_PASSWORD
      - SECRET_KEY
    networks:
      flowauth_database:
        aliases:
          - web
      web:
        aliases:
          - auth

  flowauth_postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/FLOWAUTH_DB_PASSWORD
      POSTGRES_USER: flowauth
      POSTGRES_DB: flowauth
    secrets:
      - FLOWAUTH_DB_PASSWORD
    networks:
      - flowauth_database

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - nginx_home:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    networks:
      web:
        aliases:
          - proxy

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - vhost:/etc/nginx/vhost.d
      - nginx_home:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - "/var/run/docker.sock:/tmp/docker.sock:ro"