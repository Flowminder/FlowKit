{
  "components": {
    "schemas": {
      "DFSTotalMetricAmount": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "metric": {
            "enum": [
              "amount",
              "commission",
              "fee",
              "discount"
            ],
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "dfs_metric_total_amount"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "end_date",
          "metric",
          "start_date",
          "query_kind"
        ],
        "type": "object"
      },
      "DailyLocation": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "date": {
            "format": "date",
            "type": "string"
          },
          "method": {
            "enum": [
              "last",
              "most-common"
            ],
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "daily_location"
            ],
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "date",
          "method",
          "query_kind"
        ],
        "type": "object"
      },
      "DummyQuery": {
        "properties": {
          "dummy_param": {
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "dummy_query"
            ],
            "type": "string"
          }
        },
        "required": [
          "dummy_param",
          "query_kind"
        ],
        "type": "object"
      },
      "FlowmachineQuerySchema": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DummyQuery"
          },
          {
            "$ref": "#/components/schemas/Flows"
          },
          {
            "$ref": "#/components/schemas/MeaningfulLocationsAggregate"
          },
          {
            "$ref": "#/components/schemas/MeaningfulLocationsBetweenLabelODMatrix"
          },
          {
            "$ref": "#/components/schemas/MeaningfulLocationsBetweenDatesODMatrix"
          },
          {
            "$ref": "#/components/schemas/Geography"
          },
          {
            "$ref": "#/components/schemas/LocationEventCounts"
          },
          {
            "$ref": "#/components/schemas/UniqueSubscriberCounts"
          },
          {
            "$ref": "#/components/schemas/LocationIntroversion"
          },
          {
            "$ref": "#/components/schemas/TotalNetworkObjects"
          },
          {
            "$ref": "#/components/schemas/DFSTotalMetricAmount"
          },
          {
            "$ref": "#/components/schemas/SpatialAggregate"
          },
          {
            "$ref": "#/components/schemas/JoinedSpatialAggregate"
          }
        ]
      },
      "Flows": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "from_location": {
            "$ref": "#/components/schemas/InputToFlows"
          },
          "query_kind": {
            "enum": [
              "flows"
            ],
            "type": "string"
          },
          "to_location": {
            "$ref": "#/components/schemas/InputToFlows"
          }
        },
        "required": [
          "aggregation_unit",
          "from_location",
          "to_location",
          "query_kind"
        ],
        "type": "object"
      },
      "Geography": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "geography"
            ],
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "query_kind"
        ],
        "type": "object"
      },
      "InputToFlows": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DailyLocation"
          },
          {
            "$ref": "#/components/schemas/ModalLocation"
          }
        ]
      },
      "InputToModalLocation": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DailyLocation"
          }
        ]
      },
      "InputToSpatialAggregate": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DailyLocation"
          },
          {
            "$ref": "#/components/schemas/ModalLocation"
          }
        ]
      },
      "JoinableMetrics": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DummyQuery"
          }
        ]
      },
      "JoinedSpatialAggregate": {
        "properties": {
          "locations": {
            "$ref": "#/components/schemas/InputToSpatialAggregate"
          },
          "method": {
            "enum": [
              "mode",
              "max",
              "avg",
              "stddev",
              "median",
              "variance",
              "min"
            ],
            "type": "string"
          },
          "metric": {
            "$ref": "#/components/schemas/JoinableMetrics"
          },
          "query_kind": {
            "enum": [
              "joined_spatial_aggregate"
            ],
            "type": "string"
          }
        },
        "required": [
          "locations",
          "metric",
          "query_kind"
        ],
        "type": "object"
      },
      "LocationEventCounts": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "direction": {
            "enum": [
              "in",
              "out",
              "both"
            ],
            "type": "string"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "event_types": {
            "items": {
              "enum": [
                "calls",
                "sms",
                "mds",
                "topups"
              ],
              "type": "string"
            },
            "minItems": 1,
            "nullable": true,
            "type": "string"
          },
          "interval": {
            "enum": [
              "hour",
              "day",
              "min"
            ],
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "location_event_counts"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "direction",
          "end_date",
          "interval",
          "start_date",
          "query_kind"
        ],
        "type": "object"
      },
      "LocationIntroversion": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "direction": {
            "enum": [
              "in",
              "out",
              "both"
            ],
            "type": "string"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "location_introversion"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "end_date",
          "start_date",
          "query_kind"
        ],
        "type": "object"
      },
      "MeaningfulLocationsAggregate": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "query_kind": {
            "enum": [
              "meaningful_locations_aggregate"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          },
          "stop_date": {
            "format": "date",
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "tower_cluster_call_threshold": {
            "format": "int32",
            "type": "integer"
          },
          "tower_cluster_radius": {
            "format": "float",
            "type": "number"
          },
          "tower_day_of_week_scores": {
            "additionalProperties": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "type": "string"
          },
          "tower_hour_of_day_scores": {
            "items": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "maxItems": 24,
            "minItems": 24,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "label",
          "labels",
          "start_date",
          "stop_date",
          "tower_day_of_week_scores",
          "tower_hour_of_day_scores",
          "query_kind"
        ],
        "type": "object"
      },
      "MeaningfulLocationsBetweenDatesODMatrix": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "query_kind": {
            "enum": [
              "meaningful_locations_between_dates_od_matrix"
            ],
            "type": "string"
          },
          "start_date_a": {
            "format": "date",
            "type": "string"
          },
          "start_date_b": {
            "format": "date",
            "type": "string"
          },
          "stop_date_a": {
            "format": "date",
            "type": "string"
          },
          "stop_date_b": {
            "format": "date",
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "tower_cluster_call_threshold": {
            "format": "int32",
            "type": "integer"
          },
          "tower_cluster_radius": {
            "format": "float",
            "type": "number"
          },
          "tower_day_of_week_scores": {
            "additionalProperties": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "type": "string"
          },
          "tower_hour_of_day_scores": {
            "items": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "maxItems": 24,
            "minItems": 24,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "label",
          "start_date_a",
          "start_date_b",
          "stop_date_a",
          "stop_date_b",
          "tower_day_of_week_scores",
          "tower_hour_of_day_scores",
          "query_kind"
        ],
        "type": "object"
      },
      "MeaningfulLocationsBetweenLabelODMatrix": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "label_a": {
            "type": "string"
          },
          "label_b": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "query_kind": {
            "enum": [
              "meaningful_locations_between_label_od_matrix"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          },
          "stop_date": {
            "format": "date",
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          },
          "tower_cluster_call_threshold": {
            "format": "int32",
            "type": "integer"
          },
          "tower_cluster_radius": {
            "format": "float",
            "type": "number"
          },
          "tower_day_of_week_scores": {
            "additionalProperties": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "type": "string"
          },
          "tower_hour_of_day_scores": {
            "items": {
              "format": "float",
              "maximum": 1.0,
              "minimum": -1.0,
              "type": "number"
            },
            "maxItems": 24,
            "minItems": 24,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "label_a",
          "label_b",
          "start_date",
          "stop_date",
          "tower_day_of_week_scores",
          "tower_hour_of_day_scores",
          "query_kind"
        ],
        "type": "object"
      },
      "ModalLocation": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/InputToModalLocation"
            },
            "minItems": 1,
            "type": "array"
          },
          "query_kind": {
            "enum": [
              "modal_location"
            ],
            "type": "string"
          },
          "subscriber_subset": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "query_kind"
        ],
        "type": "object"
      },
      "SpatialAggregate": {
        "properties": {
          "locations": {
            "$ref": "#/components/schemas/InputToSpatialAggregate"
          },
          "query_kind": {
            "enum": [
              "spatial_aggregate"
            ],
            "type": "string"
          }
        },
        "required": [
          "locations",
          "query_kind"
        ],
        "type": "object"
      },
      "TotalNetworkObjects": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "period": {
            "enum": [
              "second",
              "minute",
              "hour",
              "day",
              "month",
              "year"
            ],
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "total_network_objects"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "end_date",
          "start_date",
          "query_kind"
        ],
        "type": "object"
      },
      "UniqueSubscriberCounts": {
        "properties": {
          "aggregation_unit": {
            "enum": [
              "admin0",
              "admin1",
              "admin2",
              "admin3"
            ],
            "type": "string"
          },
          "end_date": {
            "format": "date",
            "type": "string"
          },
          "query_kind": {
            "enum": [
              "unique_subscriber_counts"
            ],
            "type": "string"
          },
          "start_date": {
            "format": "date",
            "type": "string"
          }
        },
        "required": [
          "aggregation_unit",
          "end_date",
          "start_date",
          "query_kind"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "flowkit@flowminder.org"
    },
    "description": "FlowKit Analytical API",
    "license": {
      "name": "MPLv2",
      "url": "https://www.mozilla.org/en-US/MPL/2.0/"
    },
    "title": "FlowAPI",
    "version": "0.5.2+155.gee64d222"
  },
  "openapi": "3.0.1",
  "paths": {
    "/geography/{aggregation_unit}": {
      "get": {
        "operationId": "get",
        "parameters": [
          {
            "in": "path",
            "name": "aggregation_unit",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/geo+json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Downloading."
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Server error."
          }
        },
        "summary": "Get geojson for an aggregation unit"
      }
    },
    "/get/{query_id}": {
      "get": {
        "operationId": "get",
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Results returning."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request accepted."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Bad query."
          },
          "404": {
            "description": "Unknown ID"
          },
          "500": {
            "description": "Server error."
          }
        },
        "summary": "Get the output of query"
      }
    },
    "/poll/{query_id}": {
      "get": {
        "operationId": "poll",
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "status": {
                      "enum": [
                        "queued",
                        "executing"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request accepted."
          },
          "303": {
            "description": "Data ready.",
            "headers": {
              "Location": {
                "description": "URL to download data",
                "schema": {
                  "format": "url",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Bad query."
          },
          "404": {
            "description": "Unknown ID"
          },
          "500": {
            "description": "Server error."
          }
        },
        "summary": "Get the status of a query"
      }
    },
    "/run_query": {
      "post": {
        "operationId": "runQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DummyQuery"
                  },
                  {
                    "$ref": "#/components/schemas/Flows"
                  },
                  {
                    "$ref": "#/components/schemas/MeaningfulLocationsAggregate"
                  },
                  {
                    "$ref": "#/components/schemas/MeaningfulLocationsBetweenLabelODMatrix"
                  },
                  {
                    "$ref": "#/components/schemas/MeaningfulLocationsBetweenDatesODMatrix"
                  },
                  {
                    "$ref": "#/components/schemas/Geography"
                  },
                  {
                    "$ref": "#/components/schemas/LocationEventCounts"
                  },
                  {
                    "$ref": "#/components/schemas/UniqueSubscriberCounts"
                  },
                  {
                    "$ref": "#/components/schemas/LocationIntroversion"
                  },
                  {
                    "$ref": "#/components/schemas/TotalNetworkObjects"
                  },
                  {
                    "$ref": "#/components/schemas/DFSTotalMetricAmount"
                  },
                  {
                    "$ref": "#/components/schemas/SpatialAggregate"
                  },
                  {
                    "$ref": "#/components/schemas/JoinedSpatialAggregate"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Request accepted.",
            "headers": {
              "Location": {
                "description": "URL to poll for status",
                "schema": {
                  "format": "url",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Bad query."
          },
          "500": {
            "description": "Server error."
          }
        },
        "summary": "Run a query"
      }
    }
  }
}